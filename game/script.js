//alap√©rt√©kek deklar√°l√°sa//
const aknaszam= 10;
const dobozszam = 9;
let aknakhelye = [];
const sorhossz = 9;


//A j√°t√©k fel√ºlet megval√≥s√≠t√°sa, mindegyik kattinthat√≥ 'dobozt' k√ºl√∂nb√∂z≈ë azonos√≠t√≥val l√°tok el, amit azt√°n egy oszt√°lyba sorolok, √≠gy a k√©s≈ëbbiekben k√∂nnyen meg lehet hat√°rozni//
const board = () =>{
  const jatekfelulet = document.querySelector(".boxok");
  for (let i = 0; i < sorhossz; i++) {
    for (let j = 0; j < sorhossz; j++) {
      const box = document.createElement("div");
      box.classList.add("box");
      box.dataset.i = i;
      box.dataset.j = j;
      box.addEventListener("click", boxmegjelenites);
      jatekfelulet.appendChild(box);
    }
  }
}


//Az akn√°k elhelyez√©se randomiz√°lt m√≥don az eg√©sz j√°t√©k fel√ºleten//
const aknakelhelyezese = () => {
  aknakhelye = []; /*≈±r√≠tem a kor√°bban elhelyezett akn√°kat, emellett legels≈ë indul√°skor l√©trehozzom ≈ëket.*/
  while (aknakhelye.length < aknaszam) {
    const sor = Math.floor(Math.random() * dobozszam);
    const oszlop = Math.floor(Math.random() * dobozszam);
    const √∫jakna = `${sor}-${oszlop}`;

    if (!aknakhelye.includes(√∫jakna)) {
      aknakhelye.push(√∫jakna);
    }
  }
}


//A j√°t√©k fel√ºleten val√≥ kattint√°s r√∂gz√≠t√©se. Megvizsg√°lja, hogy a felhaszn√°l√≥ akn√°ra l√©pett-e vagy sem, ennek f√ºggv√©ny√©ben cselekszik.//
const boxmegjelenites = (event) =>{
  const sor = parseInt(event.target.dataset.i);
  const oszlop = parseInt(event.target.dataset.j);
  const box = document.querySelector(`.box[data-i="${sor}"][data-j="${oszlop}"]`);
  const boxes = document.querySelectorAll(".box");
  if (aknakhelye.includes(`${sor}-${oszlop}`)) {
    alert("A j√°t√©knak v√©ge! Akn√°ra l√©pt√©l.");
    box.innerText = "üí£";
    resetGame();
  } else {
    const aknak_a_kozelben = kozeliaknakrogzitese(sor, oszlop);

    if (aknak_a_kozelben > 0){
      box.innerText = aknak_a_kozelben;
    } else {
    box.innerText = "0";
    }
    
    box.style.backgroundColor = "#ddd";
  }
}


//Megvizsg√°lja, hogy a felhaszn√°l√≥ √°lltal kattintot 'doboz'-hoz mennyi szomsz√©dos akna tal√°lhat√≥. A kattintott 'doboz'-hoz k√©pest szomsz√©dos akn√°k mennyis√©g√©hez k√©pest kap √©rt√©ket a kattintott 'doboz' 0 - nincs szomsz√©dos akna; 1 - egy szomsz√©dos akna tal√°lhat√≥; 2 - k√©t darab szomsz√©dos akna tal√°lhat√≥; 3 - h√°rom szomsz√©dos akna tal√°lhat√≥ a kattintott 'doboz' k√∂r√ºl.//
function kozeliaknakrogzitese(sor, oszlop) {
  let count = 0;

  for (let i = -1; i <= 1; i++) {
    for (let j = -1; j <= 1; j++) {
      const szomszedossor = sor + i;
      const szomszedososzlop = oszlop + j;

      if (szomszedossor >= 0 && szomszedossor < sorhossz && szomszedososzlop >= 0 && szomszedososzlop < sorhossz) {
        if (aknakhelye.includes(`${szomszedossor}-${szomszedososzlop}`)) {
          count++;
        }
      }
    }
  } return count;
}


//A j√°t√©k fel√ºlet vissza√°ll√≠t√°sa alap√°ll√°sba, emellett az akn√°k elhelyez√©s√©t is √∫jragener√°lja.//
function resetGame() {
  const boxes = document.querySelectorAll(".box");

  boxes.forEach(box => {
    box.innerText = "";
    box.style.backgroundColor = "";
  });

  aknakelhelyezese();
}

//A komponensek megh√≠v√°sa.//
board();
aknakelhelyezese();


///id≈ë szamlalas///
let countdown;
function starttimer() {
clearInterval(countdown);
let timer = document.getElementById("timer");
let time = 60;

countdown = setInterval(function() {
  time--;
  let minutes = Math.floor(time / 60);
  let seconds = time % 60;

  if (seconds < 10) {
    seconds = "0" + seconds;
  }

  timer.innerHTML = minutes + ":" + seconds;

  if (time <= 0) {
    clearInterval(countdown);
    timer.innerHTML = "Vesztettel!";
  }
}, 1000);
}